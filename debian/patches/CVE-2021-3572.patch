From: Pradyun Gedam <pradyunsg@gmail.com>
Date: Tue, 11 May 2021 20:04:10 -0400
Subject: Security: Don't split git references on unicode separators

Previously, maliciously formatted tags could be used to hijack a
commit-based pin. Using the fact that the split here allowed for
all of unicode's whitespace characters as separators -- which git allows
as a part of a tag name -- it is possible to force a different revision
to be installed; if an attacker gains access to the repository.

This change stops splitting the string on unicode characters, by forcing
the splits to happen on newlines and ASCII spaces.

Origin: upstream, https://github.com/pypa/pip/pull/9827
---
 src/pip/_internal/vcs/git.py | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

--- a/pip/vcs/git.py
+++ b/pip/vcs/git.py
@@ -133,8 +133,14 @@
         output = call_subprocess([self.cmd, 'show-ref'],
                                  show_stdout=False, cwd=location)
         rv = {}
-        for line in output.strip().splitlines():
-            commit, ref = line.split(' ', 1)
+        # NOTE: We do not use splitlines here since that would split on other
+        #       unicode separators, which can be maliciously used to install a
+        #       different revision.
+        for line in output.strip().split("\n"):
+            line = line.rstrip("\r")
+            if not line:
+                continue
+            commit, ref = line.split(" ", maxsplit=2)
             ref = ref.strip()
             ref_name = None
             if ref.startswith('refs/remotes/'):
